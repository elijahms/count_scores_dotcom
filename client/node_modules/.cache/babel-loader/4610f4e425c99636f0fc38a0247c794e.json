{"ast":null,"code":"var _jsxFileName = \"/Users/wes/Development/projects/count_scores_dotcom/client/src/components/AddNewGame.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddNewGame = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [allGames, setAllGames] = useState([]);\n  const [gameInput, setGameInput] = useState(\"\");\n  const [dateInput, setDateInput] = useState(\"\");\n  const [newMatch, setNewMatch] = useState({\n    game_id: null,\n    date: dateInput\n  });\n  const [allPlayers, setAllPlayers] = useState([{\n    user_id: user.id,\n    match_id: null,\n    score: null,\n    is_winner: null,\n    name: `${user.first_name} ${user.last_name}`\n  }]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleGameInput(gameInput);\n    console.log(allPlayers[0]);\n  };\n\n  const handleMatch = game => {\n    let newMatchEntry = { ...newMatch,\n      game_id: game.id,\n      date: dateInput\n    };\n    fetch(\"http://localhost:3000/matches\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newMatchEntry)\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(matchInDB => {\n          console.log(`Match Added To DB: ${JSON.stringify(matchInDB)}`);\n          handlePlayerSubmit(matchInDB);\n        });\n      } else {\n        res.json().then(errors => console.log(errors));\n      }\n    });\n  };\n\n  const handlePlayerSubmit = match => {\n    let playersForEntry = [...allPlayers];\n    playersForEntry.map(givenPlayer => {\n      givenPlayer.match_id = match.id;\n      fetch(\"http://localhost:3000/players\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(givenPlayer)\n      }).then(res => {\n        if (res.ok) {\n          res.json().then(playerinDB => {\n            console.log(`Player Added to DB: ${JSON.stringify(playerinDB, null, 4)}`);\n          });\n        } else {\n          res.json().then(errors => console.log(errors));\n        }\n      });\n    });\n  };\n\n  const handleGameInput = input => {\n    let inputComparison = input.toLowerCase();\n    let gameInDB = false;\n    let gameForEntry = false;\n    allGames.map(givenGame => {\n      let gameComparison = givenGame.name.toLowerCase();\n\n      if (inputComparison == gameComparison) {\n        gameInDB = true;\n        gameForEntry = givenGame;\n        console.log(`Game Entry Found: ${givenGame.name}`);\n      }\n    });\n\n    if (gameInDB == false) {\n      fetch(\"http://localhost:3000/games\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: input\n        })\n      }).then(res => {\n        if (res.ok) {\n          res.json().then(newGameEntry => {\n            gameForEntry = newGameEntry;\n            console.log(`Game For Entry: ${JSON.stringify(gameForEntry)}`);\n            setNewMatch({ ...newMatch,\n              game_id: gameForEntry.id,\n              date: dateInput\n            });\n            handleMatch(gameForEntry);\n          });\n        } else {\n          res.json().then(errors => console.log(errors));\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/games\").then(r => {\n      if (r.ok) {\n        r.json().then(games => setAllGames(games));\n      }\n    });\n  }, []);\n\n  const handlePlayerName = e => {\n    const indexValue = parseInt(e.target.name);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].name = e.target.value;\n    setAllPlayers(playerEntries);\n  };\n\n  const handlePlayerScore = e => {\n    const indexValue = parseInt(e.target.name);\n    let playerEntries = [...allPlayers];\n    playerEntries[indexValue].score = e.target.value;\n    setAllPlayers(playerEntries);\n  };\n\n  const addPlayer = e => {\n    setAllPlayers([...allPlayers, {\n      user_id: null,\n      match_id: null,\n      score: null,\n      is_winner: null,\n      name: \"\"\n    }]);\n    console.log(allPlayers);\n  };\n\n  const spawnPlayers = () => {\n    let counter = 0;\n    const displayedPlayers = [...allPlayers].map(givenPlayer => {\n      counter = counter + 1;\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          fullWidth: true,\n          autoComplete: `player${counter}name`,\n          id: `player${counter}name`,\n          label: `Player ${counter} Name`,\n          name: `${counter - 1}`,\n          onChange: handlePlayerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          required: true,\n          fullWidth: true,\n          autoComplete: `player${counter}score`,\n          id: `player${counter}score`,\n          label: `Player ${counter} Score`,\n          name: `${counter - 1}`,\n          onChange: handlePlayerScore\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }, this)]\n      }, counter, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this);\n    });\n    return displayedPlayers;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"xs\",\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\"\n          },\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Add New Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            noValidate: true,\n            sx: {\n              mt: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  autoComplete: \"game-name\",\n                  name: \"name\",\n                  id: \"gameName\",\n                  label: \"Game\",\n                  autoFocus: true,\n                  onChange: e => setGameInput(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  fullWidth: true,\n                  autoComplete: \"match-date\",\n                  id: \"matchDate\",\n                  label: \"Date of Game\",\n                  name: \"date\",\n                  onChange: e => setDateInput(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), spawnPlayers(), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                fullWidth: true,\n                variant: \"contained\",\n                sx: {\n                  mt: 3,\n                  mb: 2\n                },\n                children: \"Add New Game\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addPlayer,\n      children: \"Add Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddNewGame, \"CKZHkRlycfItjjqchxUaaOgzuPE=\");\n\n_c = AddNewGame;\nconst theme = createTheme();\nexport default AddNewGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewGame\");","map":{"version":3,"sources":["/Users/wes/Development/projects/count_scores_dotcom/client/src/components/AddNewGame.js"],"names":["useState","useEffect","Avatar","Button","CssBaseline","TextField","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","AddNewGame","user","allGames","setAllGames","gameInput","setGameInput","dateInput","setDateInput","newMatch","setNewMatch","game_id","date","allPlayers","setAllPlayers","user_id","id","match_id","score","is_winner","name","first_name","last_name","handleSubmit","e","preventDefault","handleGameInput","console","log","handleMatch","game","newMatchEntry","fetch","method","headers","body","JSON","stringify","then","res","ok","json","matchInDB","handlePlayerSubmit","errors","match","playersForEntry","map","givenPlayer","playerinDB","input","inputComparison","toLowerCase","gameInDB","gameForEntry","givenGame","gameComparison","newGameEntry","r","games","handlePlayerName","indexValue","parseInt","target","playerEntries","value","handlePlayerScore","addPlayer","spawnPlayers","counter","displayedPlayers","theme","marginTop","display","flexDirection","alignItems","mt","mb"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst AddNewGame = ({user}) => {\nconst [allGames,setAllGames] = useState([])\nconst [gameInput,setGameInput] = useState(\"\")\nconst [dateInput,setDateInput] = useState(\"\")\nconst [newMatch,setNewMatch] = useState({\n  game_id: null,\n  date: dateInput\n})\nconst [allPlayers,setAllPlayers] = useState([{\n  user_id: user.id,\n  match_id: null,\n  score: null,\n  is_winner: null,\n  name: `${user.first_name} ${user.last_name}`\n}])\n\nconst handleSubmit = (e) => {\n  e.preventDefault()\n  handleGameInput(gameInput)\n  console.log(allPlayers[0])\n}\n\nconst handleMatch = (game) => {\n  let newMatchEntry = {...newMatch, game_id:game.id, date:dateInput}\n  fetch(\"http://localhost:3000/matches\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(newMatchEntry),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((matchInDB) => {\n            console.log(`Match Added To DB: ${JSON.stringify(matchInDB)}`)\n            handlePlayerSubmit(matchInDB)\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      })\n}\n\nconst handlePlayerSubmit = (match) => {\n  let playersForEntry = [...allPlayers]\n  playersForEntry.map((givenPlayer) => {\n    givenPlayer.match_id = match.id\n    fetch(\"http://localhost:3000/players\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(givenPlayer),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((playerinDB) => {\n            console.log(`Player Added to DB: ${JSON.stringify(playerinDB,null,4)}`)\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      })\n  })\n}\n\nconst handleGameInput = (input) => {\n  let inputComparison = input.toLowerCase()\n  let gameInDB = false\n  let gameForEntry = false\n  allGames.map((givenGame) => {\n    let gameComparison = givenGame.name.toLowerCase()\n    if (inputComparison == gameComparison) {\n      gameInDB = true\n      gameForEntry = givenGame\n      console.log(`Game Entry Found: ${givenGame.name}`)\n    }\n  })\n  if (gameInDB == false){\n    fetch(\"http://localhost:3000/games\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: input\n        }),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((newGameEntry) => {\n            gameForEntry = newGameEntry\n            console.log(`Game For Entry: ${JSON.stringify(gameForEntry)}`)\n            setNewMatch({...newMatch, game_id:gameForEntry.id, date:dateInput})\n            handleMatch(gameForEntry)\n          });\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      })\n  }\n}\n\nuseEffect(() => {\n  fetch(\"http://localhost:3000/games\").then((r) => {\n    if (r.ok) {\n      r.json().then((games) => setAllGames(games));\n    }\n  });\n}, []);\n\nconst handlePlayerName = (e) => {\n  const indexValue=parseInt(e.target.name)\n  let playerEntries = [...allPlayers]\n  playerEntries[indexValue].name = e.target.value\n  setAllPlayers(playerEntries)\n}\n\nconst handlePlayerScore = (e) => {\n  const indexValue=parseInt(e.target.name)\n  let playerEntries = [...allPlayers]\n  playerEntries[indexValue].score = e.target.value\n  setAllPlayers(playerEntries)\n}\n\nconst addPlayer = (e) => {\n  setAllPlayers([...allPlayers, {\n    user_id: null,\n    match_id: null,\n    score: null,\n    is_winner: null,\n    name: \"\"\n  }])\n  console.log(allPlayers)\n}\n\nconst spawnPlayers = () => {\n  let counter = 0\n  const displayedPlayers=[...allPlayers].map((givenPlayer) => {\n    counter=counter+1\n    return (\n      <Grid item xs={12} sm={6} key={counter}>\n      <TextField\n        required\n        fullWidth\n        autoComplete={`player${counter}name`}\n        id={`player${counter}name`}\n        label={`Player ${counter} Name`}\n        name={`${counter-1}`}\n        onChange={handlePlayerName}\n      />\n      <TextField\n        required\n        fullWidth\n        autoComplete={`player${counter}score`}\n        id={`player${counter}score`}\n        label={`Player ${counter} Score`}\n        name={`${counter-1}`}\n        onChange={handlePlayerScore}\n      />\n    </Grid>\n    )\n})\n\nreturn displayedPlayers\n}\n\n\n  return (\n    <div>\n      <ThemeProvider theme={theme}>\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n            onSubmit={handleSubmit}\n          >\n            <Typography component=\"h1\" variant=\"h5\">\n              Add New Game\n            </Typography>\n            <Box component=\"form\" noValidate sx={{ mt: 3 }}>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    autoComplete=\"game-name\"\n                    name=\"name\"\n                    id=\"gameName\"\n                    label=\"Game\"\n                    autoFocus\n                    onChange={(e) => setGameInput(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    required\n                    fullWidth\n                    autoComplete=\"match-date\"\n                    id=\"matchDate\"\n                    label=\"Date of Game\"\n                    name=\"date\"\n                    onChange={(e) => setDateInput(e.target.value)}\n                  />\n                </Grid>\n                {spawnPlayers()}\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  sx={{ mt: 3, mb: 2 }}\n                >\n                  Add New Game\n                </Button>\n              </Grid>\n            </Box>\n          </Box>\n        </Container>\n      </ThemeProvider>\n      <button onClick={addPlayer}>Add Player</button>\n    </div>\n  );\n};\n\nconst theme = createTheme();\n\nexport default AddNewGame;\n"]},"metadata":{},"sourceType":"module"}