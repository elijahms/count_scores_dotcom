{"ast":null,"code":"var _jsxFileName = \"/Users/yuyili/Development/Projects/count_scores_dotcom/client/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport GamesContainer from \"./GameContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const [userGames, setUserGames] = useState([]);\n  const [clickFind, setClickFind] = useState(true);\n  let game_ids = [];\n\n  const handleFindGames = () => {\n    fetch(`http://localhost:3000/users/${user.id}/games`).then(res => res.json()).then(gameData => {\n      setUserGames(gameData);\n      setClickFind(clickFind => !clickFind);\n    });\n  };\n\n  const mapGames = userGames.map(game => {\n    if (game_ids.includes(game.id) === false) {\n      game_ids.push(game.id);\n      return /*#__PURE__*/_jsxDEV(GamesContainer, {\n        id: game.id,\n        user: user,\n        game: game\n      }, game.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [clickFind ? /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 275\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: \"View Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          align: \"right\",\n          onClick: handleFindGames,\n          children: \"Select games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : mapGames, clickFind ? /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 275\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          children: \"Add New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          align: \"right\",\n          children: \"Add Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"m50ybJisGNWQv34C8j1gJ6l3rHA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/yuyili/Development/Projects/count_scores_dotcom/client/src/components/Home.js"],"names":["Card","CardContent","Button","Typography","useState","GamesContainer","Home","user","userGames","setUserGames","clickFind","setClickFind","game_ids","handleFindGames","fetch","id","then","res","json","gameData","mapGames","map","game","includes","push","maxWidth"],"mappings":"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","sourcesContent":["import Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { useState } from \"react\";\nimport GamesContainer from \"./GameContainer\";\n\nconst Home = ({ user }) => {\n  const [userGames, setUserGames] = useState([]);\n  const [clickFind, setClickFind] = useState(true);\n\n  let game_ids = [];\n\n  const handleFindGames = () => {\n    fetch(`http://localhost:3000/users/${user.id}/games`)\n      .then((res) => res.json())\n      .then((gameData) => {\n        setUserGames(gameData);\n        setClickFind((clickFind) => !clickFind);\n      });\n  };\n\n  const mapGames = userGames.map((game) => {\n    if (game_ids.includes(game.id) === false) {\n      game_ids.push(game.id);\n      return (\n        <GamesContainer key={game.id} id={game.id} user={user} game={game} />\n      );\n    }\n  });\n\n  return (\n    <div>\n      {clickFind ? (\n        <Card sx={{ maxWidth: 275 }}>\n          <CardContent align=\"center\">\n            <Typography variant=\"h5\" component=\"div\">\n              View Games\n            </Typography>\n          </CardContent>\n          <CardContent align=\"center\">\n            <Button size=\"small\" align=\"right\" onClick={handleFindGames}>\n              Select games\n            </Button>\n          </CardContent>\n        </Card>\n      ) : (\n        mapGames\n      )}\n\n      {clickFind ? (\n        <Card sx={{ maxWidth: 275 }}>\n          <CardContent align=\"center\">\n            <Typography variant=\"h5\" component=\"div\">\n              Add New Game\n            </Typography>\n          </CardContent>\n          <CardContent align=\"center\">\n            <Button size=\"small\" align=\"right\">\n              Add Game\n            </Button>\n          </CardContent>\n        </Card>\n      ) : null}\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}