{"ast":null,"code":"var _jsxFileName = \"/Users/wes/Development/projects/count_scores_dotcom/client/src/components/MatchCard.js\",\n    _s = $RefreshSig$();\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MatchCard = _ref => {\n  _s();\n\n  let {\n    date,\n    players,\n    user\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const [playerWinner, setPlayerWinner] = useState(false);\n\n  const isSelfWinner = () => {\n    players.map(player => {\n      if (player.user_id === user.id && player.is_winner === true) {\n        setPlayerWinner(true);\n      }\n    });\n    console.log(`${date}: Is winner: ${playerWinner}`);\n  };\n\n  useEffect(() => {\n    isSelfWinner();\n  }, []);\n  const mapPlayers = players.map(player => {\n    if (player.is_winner === true) {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        sx: {\n          \"&:last-child td, &:last-child th\": {\n            border: 0\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: `ğŸ‘‘ ${player.name} ğŸ‘‘`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: player.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        sx: {\n          \"&:last-child td, &:last-child th\": {\n            border: 0\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n          children: player.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, player.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 650\n      },\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"expand row\",\n              size: \"small\",\n              onClick: () => setOpen(!open),\n              children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), `Date of Game: ${date}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), open ? /*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Players\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : null, open ? /*#__PURE__*/_jsxDEV(TableBody, {\n        children: mapPlayers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MatchCard, \"/hBnAQ1JhF1bchDsFSOOIPdI6jM=\");\n\n_c = MatchCard;\nexport default MatchCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatchCard\");","map":{"version":3,"sources":["/Users/wes/Development/projects/count_scores_dotcom/client/src/components/MatchCard.js"],"names":["Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","IconButton","KeyboardArrowDownIcon","KeyboardArrowUpIcon","useState","useEffect","MatchCard","date","players","user","open","setOpen","playerWinner","setPlayerWinner","isSelfWinner","map","player","user_id","id","is_winner","console","log","mapPlayers","border","name","score","minWidth"],"mappings":"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","sourcesContent":["import Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport IconButton from \"@mui/material/IconButton\";\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\nimport {useState, useEffect} from \"react\";\n\nconst MatchCard = ({ date, players, user }) => {\n  const [open, setOpen] = useState(false);\n  const [playerWinner,setPlayerWinner] = useState(false)\n\n  const isSelfWinner = () => {\n    players.map((player) => { \n      if (player.user_id === user.id && player.is_winner === true){\n        setPlayerWinner(true)\n      }\n    })\n    console.log(`${date}: Is winner: ${playerWinner}`)\n  }\n\n  useEffect(() => {\n    isSelfWinner()\n  },[])\n\n  const mapPlayers = players.map((player) => {\n    if (player.is_winner === true) {\n      return (\n        <TableRow\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n          key={player.id}\n        >\n          <TableCell>{`ğŸ‘‘ ${player.name} ğŸ‘‘`}</TableCell>\n          <TableCell>{player.score}</TableCell>\n        </TableRow>\n      );\n    } else {\n      return (\n        <TableRow\n          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n          key={player.id}\n        >\n          <TableCell>{player.name}</TableCell>\n          <TableCell>{player.score}</TableCell>\n        </TableRow>\n      );\n    }\n  });\n\n  return (\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>\n              <IconButton\n                aria-label=\"expand row\"\n                size=\"small\"\n                onClick={() => setOpen(!open)}\n              >\n                {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n              </IconButton>\n              {`Date of Game: ${date}`}\n            </TableCell>\n          </TableRow>\n        </TableHead>\n\n        {open ? (\n          <TableHead>\n            <TableRow>\n              <TableCell>Players</TableCell>\n              <TableCell>Score</TableCell>\n            </TableRow>\n          </TableHead>\n        ) : null}\n\n        {open ? <TableBody>{mapPlayers}</TableBody> : null}\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default MatchCard;\n"]},"metadata":{},"sourceType":"module"}