[{"/Users/wes/Development/projects/count_scores/client/src/index.js":"1","/Users/wes/Development/projects/count_scores/client/src/components/App.js":"2","/Users/wes/Development/projects/count_scores/client/src/components/Login.js":"3","/Users/wes/Development/projects/count_scores/client/src/components/SignUp.js":"4","/Users/wes/Development/projects/count_scores/client/src/components/GameContainer.js":"5","/Users/wes/Development/projects/count_scores/client/src/components/Home.js":"6","/Users/wes/Development/projects/count_scores/client/src/components/Matches.js":"7"},{"size":248,"mtime":1641237652942,"results":"8","hashOfConfig":"9"},{"size":1276,"mtime":1641269344414,"results":"10","hashOfConfig":"9"},{"size":4750,"mtime":1641244636084,"results":"11","hashOfConfig":"9"},{"size":8899,"mtime":1641309517213,"results":"12","hashOfConfig":"9"},{"size":808,"mtime":1641269344414,"results":"13","hashOfConfig":"9"},{"size":1098,"mtime":1641269344415,"results":"14","hashOfConfig":"9"},{"size":1220,"mtime":1641269344415,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cmqn2g",{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/wes/Development/projects/count_scores/client/src/index.js",[],"/Users/wes/Development/projects/count_scores/client/src/components/App.js",[],"/Users/wes/Development/projects/count_scores/client/src/components/Login.js",["31","32","33","34","35"],"/Users/wes/Development/projects/count_scores/client/src/components/SignUp.js",["36","37","38","39"],"import { useState } from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nconst SignUp = () => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(true);\n  const [password, setPassword] = useState(\"\");\n  const [passwordRepeat, setPasswordRepeat] = useState(\"\");\n  const [passwordMatch, setPasswordMatch] = useState(true);\n  const [setSignUp, setSetSignUp] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n\n  const checkEmail = () => {\n    if (\n      String(email)\n        .toLowerCase()\n        .match(\n          /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        )\n    ) {\n      setEmailValid(true);\n      return emailValid;\n    } else {\n      setEmailValid((emailValid) => !emailValid);\n    }\n  };\n\n  const checkPassword = () => {\n    if (password === passwordRepeat) {\n      setPasswordMatch(true);\n      return passwordMatch;\n    } else {\n      setPasswordMatch((passwordMatch) => !passwordMatch);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    checkEmail();\n    checkPassword();\n\n    if (checkEmail && checkPassword) {\n      const user = {\n        first_name:firstname,\n        last_name:lastname,\n        email,\n        username,\n        password,\n      };\n\n      console.log(user);\n\n      fetch(\"http://localhost:3000/signup\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      }).then((res) => {\n        if (res.ok) {\n          res.json().then((data) => console.log(data));\n        } else {\n          res.json().then((errors) => console.log(errors));\n        }\n      });\n\n      setFirstname(\"\");\n      setLastname(\"\");\n      setEmail(\"\");\n      setUsername(\"\");\n      setPassword(\"\");\n      setPasswordRepeat(\"\");\n\n      e.target.reset();\n    }\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"given-name\"\n                  name=\"firstname\"\n                  id=\"firstname\"\n                  label=\"First name\"\n                  autoFocus\n                  value={firstname}\n                  onChange={(e) => setFirstname(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"family-name\"\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  value={lastname}\n                  onChange={(e) => setLastname(e.target.value)}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                {emailValid ? (\n                  <TextField\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Email Address\"\n                    helperText=\"Must be a valid email containing '@'\"\n                    variant=\"filled\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  autoComplete=\"username\"\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"new-password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Password\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                {passwordMatch ? (\n                  <TextField\n                    required\n                    fullWidth\n                    name=\"password-match\"\n                    label=\"Type Password Again\"\n                    type=\"password\"\n                    id=\"password-match\"\n                    autoComplete=\"new-password-match\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                ) : (\n                  <TextField\n                    error\n                    required\n                    fullWidth\n                    id=\"filled-error-helper-text\"\n                    label=\"Type Password Again\"\n                    helperText=\"Passwords don't match, please try again\"\n                    variant=\"filled\"\n                    type=\"password\"\n                    value={passwordRepeat}\n                    onChange={(e) => setPasswordRepeat(e.target.value)}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={\n                    <Checkbox value=\"allowExtraEmails\" color=\"primary\" />\n                  }\n                  label=\"I agree to the privacy policy and receive updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link href=\"/\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst Copyright = (props) => {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"/\">\n        Score Counter\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n};\n\nconst theme = createTheme();\n\nexport default SignUp;\n","/Users/wes/Development/projects/count_scores/client/src/components/GameContainer.js",["40"],"/Users/wes/Development/projects/count_scores/client/src/components/Home.js",["41","42"],"/Users/wes/Development/projects/count_scores/client/src/components/Matches.js",[],{"ruleId":"43","severity":1,"message":"44","line":18,"column":10,"nodeType":"45","messageId":"46","endLine":18,"endColumn":15},{"ruleId":"43","severity":1,"message":"47","line":18,"column":17,"nodeType":"45","messageId":"46","endLine":18,"endColumn":25},{"ruleId":"43","severity":1,"message":"48","line":19,"column":10,"nodeType":"45","messageId":"46","endLine":19,"endColumn":16},{"ruleId":"43","severity":1,"message":"49","line":19,"column":18,"nodeType":"45","messageId":"46","endLine":19,"endColumn":27},{"ruleId":"50","severity":1,"message":"51","line":120,"column":15,"nodeType":"52","messageId":"53","endLine":120,"endColumn":30},{"ruleId":"43","severity":1,"message":"54","line":25,"column":10,"nodeType":"45","messageId":"46","endLine":25,"endColumn":19},{"ruleId":"43","severity":1,"message":"55","line":25,"column":21,"nodeType":"45","messageId":"46","endLine":25,"endColumn":33},{"ruleId":"43","severity":1,"message":"48","line":26,"column":10,"nodeType":"45","messageId":"46","endLine":26,"endColumn":16},{"ruleId":"43","severity":1,"message":"49","line":26,"column":18,"nodeType":"45","messageId":"46","endLine":26,"endColumn":27},{"ruleId":"43","severity":1,"message":"56","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":19},{"ruleId":"43","severity":1,"message":"57","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":22},{"ruleId":"43","severity":1,"message":"58","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":15},"no-unused-vars","'login' is assigned a value but never used.","Identifier","unusedVar","'setLogin' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'setSignUp' is assigned a value but never used.","'setSetSignUp' is assigned a value but never used.","'CardActions' is defined but never used.","'GamesContainer' is defined but never used.","'Matches' is defined but never used."]